因为Unicode可以采用16位或者32位编码，所以计算机在处理时需要知道其字节顺序，BOM就是用来标识字节流的字节顺序的，但字节顺序这个概念对UTF-8来说是没有意义的，所以BOM对UTF-8同样没有意义。然而Unicode标准BOM却在UTF-8编码格式中存在，其存在位置在文件开头，以三个字节0xEF, 0xBB, 0xBF表示。
UTF-8编码不推荐使用无意义的BOM，但许多Windows程序却在保存UTF-8编码的文件时将其存为带BOM的格式（即在文件开头加上0xEFBBBF三个字节），这么干的就包括Windows记事本。这是一串隐藏的字符，用于让记事本等编辑器识别这个文件是否以UTF-8编码。对于一般的文件，这样并不会产生什么麻烦。但对于PHP来说，BOM是个大麻烦。
PHP并不会忽略BOM，所以在读取、包含或者引用这些文件时，会把BOM作为该文件开头正文的一部分。根据嵌入式语言的特点，这串字符将被直接执行（显示）出来。由此造成即使页面的 top padding 设置为0，也无法让整个网页紧贴浏览器顶部。